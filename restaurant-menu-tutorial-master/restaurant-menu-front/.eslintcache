[{"/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/index.js":"1","/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/App.js":"2","/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/components/AddMenu.js":"3","/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/components/MenuList.js":"4","/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/services/menu.service.js":"5","/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/components/UpdateMenu.js":"6"},{"size":264,"mtime":1612979933137,"results":"7","hashOfConfig":"8"},{"size":1018,"mtime":1612979932849,"results":"9","hashOfConfig":"8"},{"size":3043,"mtime":1612979932945,"results":"10","hashOfConfig":"8"},{"size":2884,"mtime":1613138917964,"results":"11","hashOfConfig":"8"},{"size":118,"mtime":1612979933149,"results":"12","hashOfConfig":"8"},{"size":3811,"mtime":1612979933101,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gt1ngt",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/index.js",[],["29","30"],"/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/App.js",[],"/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/components/AddMenu.js",[],"/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/components/MenuList.js",["31"],"/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/services/menu.service.js",[],["32","33"],"/home/koladev/restaurant-menu-tutorial/restaurant-menu-front/src/components/UpdateMenu.js",["34"],"import axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { baseURL, headers } from \"./../services/menu.service\";\n\nexport const UpdateMenu = () => {\n  const initialMenuState = {\n    id: null,\n    name: \"\",\n    description: \"\",\n    price: 0,\n  };\n\n  let { id } = useParams();\n\n  const [currentMenu, setCurrentMenu] = useState(initialMenuState);\n  const [submitted, setSubmitted] = useState(false);\n  const countRef = useRef(0);\n\n  useEffect(() => {\n    retrieveMenu();\n  }, [countRef]);\n\n  const handleMenuChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentMenu({ ...currentMenu, [name]: value });\n  };\n\n  const retrieveMenu = () => {\n    axios\n      .get(`${baseURL}/menu/${id}/`, {\n        headers: {\n          headers,\n        },\n      })\n      .then((response) => {\n        setCurrentMenu({\n          id: response.data.id,\n          name: response.data.name,\n          description: response.data.description,\n          price: response.data.price,\n        });\n        console.log(currentMenu);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const updateMenu = () => {\n    let data = {\n      name: currentMenu.name,\n      description: currentMenu.description,\n      price: currentMenu.price,\n    };\n\n    axios\n      .put(`${baseURL}/menu/${id}/`, data, {\n        headers: {\n          headers,\n        },\n      })\n      .then((response) => {\n        setCurrentMenu({\n          id: response.data.id,\n          name: response.data.name,\n          description: response.data.description,\n          price: response.data.price,\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const newMenu = () => {\n    setCurrentMenu(initialMenuState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <div\n            className=\"alert alert-success alert-dismissible fade show\"\n            role=\"alert\"\n          >\n            Menu Updated!\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"alert\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <button className=\"btn btn-success\" onClick={newMenu}>\n            Update\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              required\n              value={currentMenu.name}\n              onChange={handleMenuChange}\n              name=\"name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"description\"\n              required\n              value={currentMenu.description}\n              onChange={handleMenuChange}\n              name=\"description\"\n              default\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"price\">Price</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"price\"\n              required\n              value={currentMenu.price}\n              onChange={handleMenuChange}\n              name=\"price\"\n            />\n          </div>\n\n          <button onClick={updateMenu} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":15,"column":6,"nodeType":"41","endLine":15,"endColumn":16,"suggestions":"42"},{"ruleId":"35","replacedBy":"43"},{"ruleId":"37","replacedBy":"44"},{"ruleId":"39","severity":1,"message":"45","line":23,"column":8,"nodeType":"41","endLine":23,"endColumn":18,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveAllMenus'. Either include it or remove the dependency array.","ArrayExpression",["49"],["47"],["48"],"React Hook useEffect has a missing dependency: 'retrieveMenu'. Either include it or remove the dependency array.",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [countRef, retrieveAllMenus]",{"range":"55","text":"56"},"Update the dependencies array to be: [countRef, retrieveMenu]",{"range":"57","text":"58"},[434,444],"[countRef, retrieveAllMenus]",[587,597],"[countRef, retrieveMenu]"]